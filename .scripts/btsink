#!/usr/bin/env python3

import time
import dbus
from dbus.mainloop.glib import DBusGMainLoop
from gi.repository import GLib

import subprocess

# ID of the device we care about
DEV_ID = 'CC_98_8B_1C_17_9D'

dbus_loop = DBusGMainLoop()
bus = dbus.SystemBus(mainloop=dbus_loop)

# Figure out the path to the headset
man = bus.get_object('org.bluez', '/')
iface = dbus.Interface(man, 'org.freedesktop.DBus.Properties')

headset = bus.get_object('org.bluez', '/org/bluez/hci0/dev_CC_98_8B_1C_17_9D')
connect_sink = headset.get_dbus_method('ConnectProfile', 'org.bluez.Device1')

def cb(iface, mbr, path):

    #if ("org.bluez.Headset" == iface and path.find(DEV_ID) > -1):
    #print('iface: %s', iface)
    #print('mbr: %s', mbr)
    #print('path: %s', path)
    if 'Connected' in mbr and  mbr['Connected'] == 1:
        time.sleep(1)
        connect_sink("0000110b-0000-1000-8000-00805f9b34fb")
        time.sleep(0.5)
        subprocess.run(["pactl", "set-card-profile", "bluez_card.CC_98_8B_1C_17_9D", "a2dp_sink"])

headset.connect_to_signal("PropertiesChanged", cb)

loop = GLib.MainLoop()
loop.run()
